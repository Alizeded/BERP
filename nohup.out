[[36m2023-08-24 04:43:06,342[0m][[34msrc.utils.utils[0m][[32mINFO[0m] - Enforcing tags! <cfg.extras.enforce_tags=True>[0m
[[36m2023-08-24 04:43:06,344[0m][[34msrc.utils.utils[0m][[32mINFO[0m] - Printing config tree with Rich! <cfg.extras.print_config=True>[0m
CONFIG
├── data
│   └── _target_: src.data.reverbCrowd_datamodule.crowdNoisyDataModule          
│       path_clean: /home/lucianius/Projects/blindEst/data//clean.data          
│       path_raw: /home/lucianius/Projects/blindEst/data//crowdNoisy.data       
│       data_dir: /home/lucianius/Projects/blindEst/data/                       
│       batch_size: 6                                                           
│       shuffle: true                                                           
│       pin_memory: false                                                       
│                                                                               
├── model
│   └── denoiserModule:                                                         
│         _target_: src.network.denoiser_module.denoiserModule                  
│         optimizer_denoiser:                                                   
│           _target_: torch.optim.Adam                                          
│           _partial_: true                                                     
│           lr: 0.0002                                                          
│           weight_decay: 0.0                                                   
│         scheduler_denoiser:                                                   
│           _target_: transformers.get_cosine_schedule_with_warmup              
│           _partial_: true                                                     
│         lr_scheduler_cfg:                                                     
│           interval: epoch                                                     
│           monitor: val/loss for denoiser                                      
│           frequency: 1                                                        
│         net_denoiser:                                                         
│           _target_: src.network.models.model.denoiser                         
│           ch_in: 1                                                            
│           ch_out: 1                                                           
│           ch_H: 64                                                            
│           max_H: 1024                                                         
│           depth: 4                                                            
│           kernel_size: 4                                                      
│           stride: 2                                                           
│           dropout_prob: 0.25                                                  
│           bottleneck_mode: xformer                                            
│           bottleneck_masking: false                                           
│           latent-depth: 3                                                     
│           latent-d_hid: 256                                                   
│           num_heads: 4                                                        
│           len_pos_enc: 80000                                                  
│       classifierModule:                                                       
│         _target_: src.network.numClassifier_module.classifierModule           
│         optimizer_classifier:                                                 
│           _target_: torch.optim.Adam                                          
│           _partial_: true                                                     
│           lr: 0.0002                                                          
│           weight_decay: 0.0                                                   
│         scheduler_classifier:                                                 
│           _target_: transformers.get_cosine_schedule_with_warmup              
│           _partial_: true                                                     
│         lr_scheduler_cfg:                                                     
│           interval: epoch                                                     
│           monitor: val/loss for classifier                                    
│           frequency: 1                                                        
│         net_classifier:                                                       
│           _target_: src.network.models.model.encoder_N                        
│           ch_in: 1022                                                         
│           ch_out: 30                                                          
│           num_layers: 4                                                       
│           num_heads: 4                                                        
│           embed_dim: 256                                                      
│           ch_scale: 2                                                         
│           len_pos_enc: 80000                                                  
│           dropout_prob: 0.25                                                  
│           masking: false                                                      
│       rirRegressorModule:                                                     
│         _target_: src.network.regressor_module.rirRegressorModule             
│         net_denoiser_path: /home/lucianius/Projects/blindEst/logs/train/runs/2
│         net_rirRegressor:                                                     
│           _target_: src.network.models.model.encoder_RIR                      
│           ch_in: 1                                                            
│           ch_out: 3                                                           
│           num_layers_encoder: 4                                               
│           num_heads: 8                                                        
│           embed_dim: 512                                                      
│           ch_scale: 2                                                         
│           len_pos_enc: 80000                                                  
│           num_layers_decoder: 2                                               
│           dropout_prob: 0.25                                                  
│           masking: false                                                      
│         optimizer:                                                            
│           _target_: torch.optim.Adam                                          
│           _partial_: true                                                     
│           lr: 0.0002                                                          
│           weight_decay: 0.0                                                   
│         scheduler:                                                            
│           _target_: transformers.get_cosine_schedule_with_warmup              
│           _partial_: true                                                     
│         optim_cfg:                                                            
│           _target_: src.network.module.optim_cfg                              
│           lambda_Th: 0.1                                                      
│           lambda_Tt: 0.6                                                      
│           lambda_volume: 0.3                                                  
│                                                                               
├── callbacks
│   └── model_checkpoint:                                                       
│         _target_: lightning.pytorch.callbacks.ModelCheckpoint                 
│         dirpath: /home/lucianius/Projects/blindEst/logs/train/runs/2023-08-24_
│         filename: epoch_{epoch:03d}                                           
│         monitor: val/acc                                                      
│         verbose: false                                                        
│         save_last: true                                                       
│         save_top_k: 1                                                         
│         mode: max                                                             
│         auto_insert_metric_name: false                                        
│         save_weights_only: false                                              
│         every_n_train_steps: null                                             
│         train_time_interval: null                                             
│         every_n_epochs: null                                                  
│         save_on_train_epoch_end: null                                         
│       early_stopping:                                                         
│         _target_: lightning.pytorch.callbacks.EarlyStopping                   
│         monitor: val/acc                                                      
│         min_delta: 0.0                                                        
│         patience: 100                                                         
│         verbose: false                                                        
│         mode: max                                                             
│         strict: true                                                          
│         check_finite: true                                                    
│         stopping_threshold: null                                              
│         divergence_threshold: null                                            
│         check_on_train_epoch_end: null                                        
│       model_summary:                                                          
│         _target_: lightning.pytorch.callbacks.RichModelSummary                
│         max_depth: -1                                                         
│       rich_progress_bar:                                                      
│         _target_: lightning.pytorch.callbacks.RichProgressBar                 
│                                                                               
├── logger
│   └── wandb:                                                                  
│         _target_: lightning.pytorch.loggers.wandb.WandbLogger                 
│         save_dir: /home/lucianius/Projects/blindEst/logs/train/runs/2023-08-24
│         offline: false                                                        
│         id: null                                                              
│         anonymous: null                                                       
│         project: lightning-hydra-template                                     
│         log_model: false                                                      
│         prefix: ''                                                            
│         group: ''                                                             
│         tags: []                                                              
│         job_type: ''                                                          
│                                                                               
├── trainer
│   └── _target_: lightning.pytorch.trainer.Trainer                             
│       default_root_dir: /home/lucianius/Projects/blindEst/logs/train/runs/2023
│       min_epochs: 1                                                           
│       max_epochs: 300                                                         
│       accelerator: gpu                                                        
│       devices: 1                                                              
│       check_val_every_n_epoch: 1                                              
│       deterministic: false                                                    
│       precision: 16                                                           
│                                                                               
├── paths
│   └── root_dir: /home/lucianius/Projects/blindEst                             
│       data_dir: /home/lucianius/Projects/blindEst/data/                       
│       log_dir: /home/lucianius/Projects/blindEst/logs/                        
│       output_dir: /home/lucianius/Projects/blindEst/logs/train/runs/2023-08-24
│       work_dir: /home/lucianius/Projects/blindEst                             
│                                                                               
├── extras
│   └── ignore_warnings: false                                                  
│       enforce_tags: true                                                      
│       print_config: true                                                      
│                                                                               
├── task_name
│   └── train                                                                   
├── tags
│   └── ['dev']                                                                 
├── train
│   └── True                                                                    
├── test
│   └── True                                                                    
├── compile
│   └── False                                                                   
├── ckpt_path
│   └── None                                                                    
└── seed
    └── 0                                                                       
[[36m2023-08-24 04:43:06,372[0m][[34m__main__[0m][[32mINFO[0m] - Instantiating datamodule <src.data.reverbCrowd_datamodule.crowdNoisyDataModule>[0m
train size 221580 val size 47480 eval size 47490
[[36m2023-08-24 04:43:06,935[0m][[34m__main__[0m][[32mINFO[0m] - Instantiating model <src.network.denoiser_module.denoiserModule>[0m
/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/lightning/pytorch/utilities/parsing.py:196: UserWarning: Attribute 'net_denoiser' is an instance of `nn.Module` and is already saved during checkpointing. It is recommended to ignore them using `self.save_hyperparameters(ignore=['net_denoiser'])`.
  rank_zero_warn(
[[36m2023-08-24 04:43:07,049[0m][[34m__main__[0m][[32mINFO[0m] - Instantiating callbacks...[0m
[[36m2023-08-24 04:43:07,050[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - Instantiating callback <lightning.pytorch.callbacks.ModelCheckpoint>[0m
[[36m2023-08-24 04:43:07,051[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - Instantiating callback <lightning.pytorch.callbacks.EarlyStopping>[0m
[[36m2023-08-24 04:43:07,052[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - Instantiating callback <lightning.pytorch.callbacks.RichModelSummary>[0m
[[36m2023-08-24 04:43:07,052[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - Instantiating callback <lightning.pytorch.callbacks.RichProgressBar>[0m
[[36m2023-08-24 04:43:07,052[0m][[34m__main__[0m][[32mINFO[0m] - Instantiating loggers...[0m
[[36m2023-08-24 04:43:07,052[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - Instantiating logger <lightning.pytorch.loggers.wandb.WandbLogger>[0m
[[36m2023-08-24 04:43:07,053[0m][[34msrc.utils.utils[0m][[31mERROR[0m] - [0m
Traceback (most recent call last):
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/hydra/_internal/instantiate/_instantiate2.py", line 92, in _call_target
    return _target_(*args, **kwargs)
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/lightning/pytorch/loggers/wandb.py", line 305, in __init__
    raise ModuleNotFoundError(
ModuleNotFoundError: You want to use `wandb` logger which is not installed yet, install it with `pip install wandb`.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/lucianius/Projects/blindEst/src/utils/utils.py", line 68, in wrap
    metric_dict, object_dict = task_func(cfg=cfg)
  File "/home/lucianius/Projects/blindEst/src/train_alpha.py", line 60, in train
    logger: List[Logger] = utils.instantiate_loggers(cfg.get("logger"))
  File "/home/lucianius/Projects/blindEst/src/utils/instantiators.py", line 54, in instantiate_loggers
    logger.append(hydra.utils.instantiate(lg_conf))
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/hydra/_internal/instantiate/_instantiate2.py", line 226, in instantiate
    return instantiate_node(
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/hydra/_internal/instantiate/_instantiate2.py", line 347, in instantiate_node
    return _call_target(_target_, partial, args, kwargs, full_key)
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/hydra/_internal/instantiate/_instantiate2.py", line 97, in _call_target
    raise InstantiationException(msg) from e
hydra.errors.InstantiationException: Error in call to target 'lightning.pytorch.loggers.wandb.WandbLogger':
ModuleNotFoundError('You want to use `wandb` logger which is not installed yet, install it with `pip install wandb`.')
full_key: logger.wandb
[[36m2023-08-24 04:43:07,054[0m][[34msrc.utils.utils[0m][[32mINFO[0m] - Output dir: /home/lucianius/Projects/blindEst/logs/train/runs/2023-08-24_04-43-06[0m
Error executing job with overrides: ['trainer=gpu', '+trainer.precision=16', 'logger=wandb']
Traceback (most recent call last):
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/hydra/_internal/instantiate/_instantiate2.py", line 92, in _call_target
    return _target_(*args, **kwargs)
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/lightning/pytorch/loggers/wandb.py", line 305, in __init__
    raise ModuleNotFoundError(
ModuleNotFoundError: You want to use `wandb` logger which is not installed yet, install it with `pip install wandb`.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/lucianius/Projects/blindEst/src/train_alpha.py", line 131, in <module>
    main()
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/hydra/_internal/utils.py", line 223, in run_and_report
    raise ex
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/hydra/_internal/hydra.py", line 132, in run
    _ = ret.return_value
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/hydra/core/utils.py", line 260, in return_value
    raise self._return_value
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/lucianius/Projects/blindEst/src/train_alpha.py", line 119, in main
    metric_dict, _ = train(cfg)
  File "/home/lucianius/Projects/blindEst/src/utils/utils.py", line 78, in wrap
    raise ex
  File "/home/lucianius/Projects/blindEst/src/utils/utils.py", line 68, in wrap
    metric_dict, object_dict = task_func(cfg=cfg)
  File "/home/lucianius/Projects/blindEst/src/train_alpha.py", line 60, in train
    logger: List[Logger] = utils.instantiate_loggers(cfg.get("logger"))
  File "/home/lucianius/Projects/blindEst/src/utils/instantiators.py", line 54, in instantiate_loggers
    logger.append(hydra.utils.instantiate(lg_conf))
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/hydra/_internal/instantiate/_instantiate2.py", line 226, in instantiate
    return instantiate_node(
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/hydra/_internal/instantiate/_instantiate2.py", line 347, in instantiate_node
    return _call_target(_target_, partial, args, kwargs, full_key)
  File "/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/hydra/_internal/instantiate/_instantiate2.py", line 97, in _call_target
    raise InstantiationException(msg) from e
hydra.errors.InstantiationException: Error in call to target 'lightning.pytorch.loggers.wandb.WandbLogger':
ModuleNotFoundError('You want to use `wandb` logger which is not installed yet, install it with `pip install wandb`.')
full_key: logger.wandb
[[36m2023-08-24 05:10:57,797[0m][[34msrc.utils.utils[0m][[32mINFO[0m] - Enforcing tags! <cfg.extras.enforce_tags=True>[0m
[[36m2023-08-24 05:10:57,800[0m][[34msrc.utils.utils[0m][[32mINFO[0m] - Printing config tree with Rich! <cfg.extras.print_config=True>[0m
CONFIG
├── data
│   └── _target_: src.data.reverbCrowd_datamodule.crowdNoisyDataModule          
│       path_clean: /home/lucianius/Projects/blindEst/data//clean.data          
│       path_raw: /home/lucianius/Projects/blindEst/data//crowdNoisy.data       
│       data_dir: /home/lucianius/Projects/blindEst/data/                       
│       batch_size: 6                                                           
│       shuffle: true                                                           
│       pin_memory: false                                                       
│                                                                               
├── model
│   └── denoiserModule:                                                         
│         _target_: src.network.denoiser_module.denoiserModule                  
│         optimizer_denoiser:                                                   
│           _target_: torch.optim.Adam                                          
│           _partial_: true                                                     
│           lr: 0.0002                                                          
│           weight_decay: 0.0                                                   
│         scheduler_denoiser:                                                   
│           _target_: transformers.get_cosine_schedule_with_warmup              
│           _partial_: true                                                     
│         lr_scheduler_cfg:                                                     
│           interval: epoch                                                     
│           monitor: val/loss for denoiser                                      
│           frequency: 1                                                        
│         net_denoiser:                                                         
│           _target_: src.network.models.model.denoiser                         
│           ch_in: 1                                                            
│           ch_out: 1                                                           
│           ch_H: 64                                                            
│           max_H: 1024                                                         
│           depth: 4                                                            
│           kernel_size: 4                                                      
│           stride: 2                                                           
│           dropout_prob: 0.25                                                  
│           bottleneck_mode: xformer                                            
│           bottleneck_masking: false                                           
│           latent-depth: 3                                                     
│           latent-d_hid: 256                                                   
│           num_heads: 4                                                        
│           len_pos_enc: 80000                                                  
│       classifierModule:                                                       
│         _target_: src.network.numClassifier_module.classifierModule           
│         optimizer_classifier:                                                 
│           _target_: torch.optim.Adam                                          
│           _partial_: true                                                     
│           lr: 0.0002                                                          
│           weight_decay: 0.0                                                   
│         scheduler_classifier:                                                 
│           _target_: transformers.get_cosine_schedule_with_warmup              
│           _partial_: true                                                     
│         lr_scheduler_cfg:                                                     
│           interval: epoch                                                     
│           monitor: val/loss for classifier                                    
│           frequency: 1                                                        
│         net_classifier:                                                       
│           _target_: src.network.models.model.encoder_N                        
│           ch_in: 1022                                                         
│           ch_out: 30                                                          
│           num_layers: 4                                                       
│           num_heads: 4                                                        
│           embed_dim: 256                                                      
│           ch_scale: 2                                                         
│           len_pos_enc: 80000                                                  
│           dropout_prob: 0.25                                                  
│           masking: false                                                      
│       rirRegressorModule:                                                     
│         _target_: src.network.regressor_module.rirRegressorModule             
│         net_denoiser_path: /home/lucianius/Projects/blindEst/logs/train/runs/2
│         net_rirRegressor:                                                     
│           _target_: src.network.models.model.encoder_RIR                      
│           ch_in: 1                                                            
│           ch_out: 3                                                           
│           num_layers_encoder: 4                                               
│           num_heads: 8                                                        
│           embed_dim: 512                                                      
│           ch_scale: 2                                                         
│           len_pos_enc: 80000                                                  
│           num_layers_decoder: 2                                               
│           dropout_prob: 0.25                                                  
│           masking: false                                                      
│         optimizer:                                                            
│           _target_: torch.optim.Adam                                          
│           _partial_: true                                                     
│           lr: 0.0002                                                          
│           weight_decay: 0.0                                                   
│         scheduler:                                                            
│           _target_: transformers.get_cosine_schedule_with_warmup              
│           _partial_: true                                                     
│         optim_cfg:                                                            
│           _target_: src.network.module.optim_cfg                              
│           lambda_Th: 0.1                                                      
│           lambda_Tt: 0.6                                                      
│           lambda_volume: 0.3                                                  
│                                                                               
├── callbacks
│   └── model_checkpoint:                                                       
│         _target_: lightning.pytorch.callbacks.ModelCheckpoint                 
│         dirpath: /home/lucianius/Projects/blindEst/logs/train/runs/2023-08-24_
│         filename: epoch_{epoch:03d}                                           
│         monitor: val/acc                                                      
│         verbose: false                                                        
│         save_last: true                                                       
│         save_top_k: 1                                                         
│         mode: max                                                             
│         auto_insert_metric_name: false                                        
│         save_weights_only: false                                              
│         every_n_train_steps: null                                             
│         train_time_interval: null                                             
│         every_n_epochs: null                                                  
│         save_on_train_epoch_end: null                                         
│       early_stopping:                                                         
│         _target_: lightning.pytorch.callbacks.EarlyStopping                   
│         monitor: val/acc                                                      
│         min_delta: 0.0                                                        
│         patience: 100                                                         
│         verbose: false                                                        
│         mode: max                                                             
│         strict: true                                                          
│         check_finite: true                                                    
│         stopping_threshold: null                                              
│         divergence_threshold: null                                            
│         check_on_train_epoch_end: null                                        
│       model_summary:                                                          
│         _target_: lightning.pytorch.callbacks.RichModelSummary                
│         max_depth: -1                                                         
│       rich_progress_bar:                                                      
│         _target_: lightning.pytorch.callbacks.RichProgressBar                 
│                                                                               
├── logger
│   └── wandb:                                                                  
│         _target_: lightning.pytorch.loggers.wandb.WandbLogger                 
│         save_dir: /home/lucianius/Projects/blindEst/logs/train/runs/2023-08-24
│         offline: false                                                        
│         id: null                                                              
│         anonymous: null                                                       
│         project: lightning-hydra-template                                     
│         log_model: false                                                      
│         prefix: ''                                                            
│         group: ''                                                             
│         tags: []                                                              
│         job_type: ''                                                          
│                                                                               
├── trainer
│   └── _target_: lightning.pytorch.trainer.Trainer                             
│       default_root_dir: /home/lucianius/Projects/blindEst/logs/train/runs/2023
│       min_epochs: 1                                                           
│       max_epochs: 300                                                         
│       accelerator: gpu                                                        
│       devices: 1                                                              
│       check_val_every_n_epoch: 1                                              
│       deterministic: false                                                    
│       precision: 16                                                           
│                                                                               
├── paths
│   └── root_dir: /home/lucianius/Projects/blindEst                             
│       data_dir: /home/lucianius/Projects/blindEst/data/                       
│       log_dir: /home/lucianius/Projects/blindEst/logs/                        
│       output_dir: /home/lucianius/Projects/blindEst/logs/train/runs/2023-08-24
│       work_dir: /home/lucianius/Projects/blindEst                             
│                                                                               
├── extras
│   └── ignore_warnings: false                                                  
│       enforce_tags: true                                                      
│       print_config: true                                                      
│                                                                               
├── task_name
│   └── train                                                                   
├── tags
│   └── ['dev']                                                                 
├── train
│   └── True                                                                    
├── test
│   └── True                                                                    
├── compile
│   └── False                                                                   
├── ckpt_path
│   └── None                                                                    
└── seed
    └── 0                                                                       
[[36m2023-08-24 05:10:57,827[0m][[34m__main__[0m][[32mINFO[0m] - Instantiating datamodule <src.data.reverbCrowd_datamodule.crowdNoisyDataModule>[0m
train size 221580 val size 47480 eval size 47490
[[36m2023-08-24 05:10:58,322[0m][[34m__main__[0m][[32mINFO[0m] - Instantiating model <src.network.denoiser_module.denoiserModule>[0m
/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/lightning/pytorch/utilities/parsing.py:196: UserWarning: Attribute 'net_denoiser' is an instance of `nn.Module` and is already saved during checkpointing. It is recommended to ignore them using `self.save_hyperparameters(ignore=['net_denoiser'])`.
  rank_zero_warn(
[[36m2023-08-24 05:10:58,528[0m][[34m__main__[0m][[32mINFO[0m] - Instantiating callbacks...[0m
[[36m2023-08-24 05:10:58,528[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - Instantiating callback <lightning.pytorch.callbacks.ModelCheckpoint>[0m
[[36m2023-08-24 05:10:58,529[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - Instantiating callback <lightning.pytorch.callbacks.EarlyStopping>[0m
[[36m2023-08-24 05:10:58,530[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - Instantiating callback <lightning.pytorch.callbacks.RichModelSummary>[0m
[[36m2023-08-24 05:10:58,530[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - Instantiating callback <lightning.pytorch.callbacks.RichProgressBar>[0m
[[36m2023-08-24 05:10:58,530[0m][[34m__main__[0m][[32mINFO[0m] - Instantiating loggers...[0m
[[36m2023-08-24 05:10:58,530[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - Instantiating logger <lightning.pytorch.loggers.wandb.WandbLogger>[0m
wandb: Currently logged in as: lucianius (lucx). Use `wandb login --relogin` to force relogin
wandb: Tracking run with wandb version 0.15.8
wandb: Run data is saved locally in /home/lucianius/Projects/blindEst/logs/train/runs/2023-08-24_05-10-57/wandb/run-20230824_051059-rzfofpo0
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run balmy-glitter-4
wandb: ⭐️ View project at https://wandb.ai/lucx/lightning-hydra-template
wandb: 🚀 View run at https://wandb.ai/lucx/lightning-hydra-template/runs/rzfofpo0
[[36m2023-08-24 05:11:01,646[0m][[34m__main__[0m][[32mINFO[0m] - Instantiating trainer <lightning.pytorch.trainer.Trainer>[0m
/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/lightning/fabric/connector.py:554: UserWarning: 16 is supported for historical reasons but its usage is discouraged. Please set your precision to 16-mixed instead!
  rank_zero_warn(
Using 16bit Automatic Mixed Precision (AMP)
Trainer already configured with model summary callbacks: [<class 'lightning.pytorch.callbacks.rich_model_summary.RichModelSummary'>]. Skipping setting a default `ModelSummary` callback.
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
[[36m2023-08-24 05:11:01,683[0m][[34m__main__[0m][[32mINFO[0m] - Logging hyperparameters![0m
[[36m2023-08-24 05:11:01,684[0m][[34m__main__[0m][[32mINFO[0m] - Starting training![0m
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]
Loading `train_dataloader` to estimate number of stepping batches.
/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/lightning/pytorch/trainer/call.py:52: UserWarning: Detected KeyboardInterrupt, attempting graceful shutdown...
  rank_zero_warn("Detected KeyboardInterrupt, attempting graceful shutdown...")
[[36m2023-08-24 05:11:02,260[0m][[34m__main__[0m][[32mINFO[0m] - Starting testing![0m
[[36m2023-08-24 05:11:02,260[0m][[34m__main__[0m][[33mWARNING[0m] - Best ckpt not found! Using current weights for testing...[0m
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]
/home/lucianius/miniconda3/envs/torch-cuda/lib/python3.10/site-packages/torchmetrics/utilities/prints.py:42: UserWarning: Encounted `nan` values in tensor. Will be removed.
  warnings.warn(*args, **kwargs)  # noqa: B028
Testing ━╸                                 419/7915 0:00:45 • 0:13:32 9.24it/s 
[[36m2023-08-24 05:11:48,916[0m][[34m__main__[0m][[32mINFO[0m] - Best ckpt path: None[0m
[[36m2023-08-24 05:11:48,917[0m][[34msrc.utils.utils[0m][[32mINFO[0m] - Output dir: /home/lucianius/Projects/blindEst/logs/train/runs/2023-08-24_05-10-57[0m
[[36m2023-08-24 05:11:48,917[0m][[34msrc.utils.utils[0m][[32mINFO[0m] - Closing wandb![0m
wandb: Waiting for W&B process to finish... (success).
wandb: ERROR Control-C detected -- Run data was not synced
